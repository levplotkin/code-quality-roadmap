@startmindmap
* software\n quality
 * project
  * scope triangle
   *_ time
   *_ money
   *_ quality
  * development life cycle
   *_ requirements
   *_ documentation
   *_ acceptance testing
 * development
  * polyglot
  * local environment
   * toolchain
    * dependency management
    * source management
   * ide
   * local hosting
  * best practices
   *_ refactoring
   *_ code review
   *_ formal verification
   *_ static code analysis
   *_ constraint programming
   *_ design pattens
  * design
   * architecture
   * type systems
    *_ static
    *_ dynamic
    *_ weak
    *_ strong
   * DDD 
   * Acronyms
    *_ SOLID
    *_ DRY
    *_ KISS
    *_ YAGNI
  * software visualization
   *_ x-ray eclipse
   *_ CodeSee
  * testing
   * types
    *_ unit test
     *_ architecture unit test
      *_ archunit
    *_ integration test
    *_ code coverage
    *_ performance
    *_ load
   * approach
    *_ TDD
    *_ Fuzzing
    *_ BDD
   * Mock
 * maintenance
 * runtime
  * logging
  * tracing
  * troubleshooting
  * debugging
  * A/B testing
  * monitoring
  * alerting
   *_ pagerduty
@endmindmap
